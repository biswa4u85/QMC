{"version":3,"sources":["pages/auth/Registration.js","pages/common/ListWapper.js"],"names":["Step","Steps","Registration","navigate","useNavigate","dispatch","useDispatch","useIntl","messages","useState","current","setCurrent","onChange","value","console","log","onFinish","values","adminLogin","step","setStep","className","onClick","type","title","description","xs","lg","name","initialValues","remember","Item","rules","required","message","placeholder","label","Group","defaultValue","mode","Option","min","max","htmlType","ListWapper","children","md"],"mappings":"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","file":"static/js/19.53913e86.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Divider, Steps, Button, Space, Card, Checkbox, Col, Form, Input, DatePicker, Radio, InputNumber, Select, Modal } from 'antd';\r\nimport ListWapper from \"../common/ListWapper\";\r\nimport AppRowContainer from '../../@crema/core/AppRowContainer';\r\nimport { useIntl } from 'react-intl';\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getProfile } from '../../store/AuthRedux'\r\nimport IntlMessages from '../../@crema/utility/IntlMessages';\r\nconst { Step } = Steps;\r\n\r\nconst Registration = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch()\r\n  const { messages } = useIntl()\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const onChange = (value) => {\r\n    console.log('onChange:', current);\r\n    setCurrent(value);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    values['loginType'] = \"email\"\r\n    dispatch(adminLogin(values))\r\n  };\r\n  const description = 'This is a description.';\r\n  const [value, setValue] = useState(1);\r\n\r\n\r\n  const [step, setStep] = useState(0);\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [isModal1, setIsModal1] = useState(false);\r\n\r\n  return (\r\n    <ListWapper>\r\n      <div className='participation'>\r\n        {/* 1t */}\r\n        {step === 0 && (<>\r\n          <h3>REGISTRATION</h3>\r\n          <h3> Welcome to our easy 3 step registration!</h3>\r\n\r\n          <h3>Are you currently teaching ?</h3>\r\n          <Space className='button-sec'>\r\n            <Button onClick={() => setStep(1)} type=\"primary\">Yes</Button>\r\n            <Button onClick={() => navigate('/home')}>No</Button>\r\n          </Space>\r\n        </>)}\r\n\r\n        {(step === 1 || step === 2 || step === 3) && (<Steps current={current}>\r\n          <Step title=\"Personal Details\" description={'Step 1'} />\r\n          <Step title=\"Verification\" description={'Step 2'} />\r\n          <Step title=\"Registration\" description={'Step 3'} />\r\n        </Steps>)}\r\n\r\n\r\n\r\n        {/* 1 */}\r\n        {step === 1 && (<Card className='login-card login-card-lg'>\r\n          <AppRowContainer>\r\n            <Col xs={24} lg={24}>\r\n              <div className='form-sec'>\r\n                <Form\r\n                  className='login-form'\r\n                  name='basic'\r\n                  initialValues={{ remember: true }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <Form.Item\r\n                    name='Name*'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Name*!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"Name\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='Date of Birth*'\r\n                    className='form-field'\r\n                    rules={[\r\n                      { required: true, message: 'Please input your Date of Birth*!' },\r\n                    ]}>\r\n                    <DatePicker onChange={onChange} placeholder=\"DD/MM/YYYY\" />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"Gender\">\r\n                    <Radio.Group name=\"radiogroup\" defaultValue={1}>\r\n\r\n                      <Radio value={1}>Male</Radio>\r\n                      <Radio value={2}>Female</Radio>\r\n                      <Radio value={3}>Prefer not to say</Radio>\r\n                    </Radio.Group>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name=\"Grade*\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Grade*!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select mode=\"multiple\" placeholder=\"Grade\">\r\n                      <Option value=\"red\">Red</Option>\r\n                      <Option value=\"green\">Green</Option>\r\n                      <Option value=\"blue\">Blue</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n\r\n\r\n                  <Form.Item\r\n                    name=\"Subject*\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Subject*!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select mode=\"multiple\" placeholder=\"Subject\">\r\n                      <Option value=\"red\">Red</Option>\r\n                      <Option value=\"green\">Green</Option>\r\n                      <Option value=\"blue\">Blue</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='School'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the School!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"School\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='Pincode'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Pincode!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"Pincode\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='State'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Email State!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"State\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n\r\n                  <Form.Item\r\n                    name='City'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the City!',\r\n                      },\r\n                    ]}>\r\n                    <InputNumber min=\"aa\" max=\"jndsd\" defaultValue=\"City\" onChange={onChange} />\r\n                  </Form.Item>\r\n\r\n\r\n                  <Form.Item\r\n                    name='Mobile Number*'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Email Mobile Number*!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"Mobile Number*\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n\r\n                  <Form.Item\r\n                    name='Email address'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Email Email address!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"Email address\"\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='Re-enter Email address'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the Email Re-enter Email address!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder=\"Re-enter Email address\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Space className='button-sec'>\r\n                    <Button\r\n                      type='primary'\r\n                      className='login-form-btn'\r\n                      htmlType='submit' onClick={() => {setCurrent(1); setStep(2)}}>\r\n                      Verify details\r\n                    </Button>\r\n                  </Space>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </AppRowContainer>\r\n        </Card>)}\r\n\r\n\r\n        {/* 2 */}\r\n        {step === 2 && (<>\r\n          <h3>Please enter the one-Time Password to Verify your account</h3>\r\n          <p>A one-Time Passwordto has been send to 98531212*32</p>\r\n          <div className='form-sec'>\r\n            <Form\r\n              className='login-form mb-0'\r\n              name='basic'\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}>\r\n\r\n              <Form.Item\r\n                name='Password'\r\n                className='form-field'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input the Password!',\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Space className='button-sec'>\r\n                <Button type=\"primary\" onClick={() => {setCurrent(2); setStep(3)}}\r\n                  htmlType='submit'\r\n                  className='login-form-btn'\r\n\r\n                >\r\n                  Validate\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                  htmlType='submit'\r\n                  className='login-form-btn'\r\n                >\r\n                  No\r\n                </Button>\r\n              </Space>\r\n\r\n              <div className='button-sec'>\r\n                <Button\r\n                  type='primary'\r\n                  htmlType='submit'\r\n                  className='login-form-btn'>\r\n                  Entered wrong mobile number ?\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div></>)}\r\n\r\n        {/* 3d */}\r\n        {step === 3 && (<>\r\n          <h3>Your details are verified <br />Pick your username and password to start making questions.</h3>\r\n          <div className='form-sec'>\r\n            <Form\r\n              className='login-form mb-0'\r\n              name='basic'\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}>\r\n\r\n              <Form.Item\r\n                name='Username'\r\n                className='form-field'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input the Username!',\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  placeholder=\"Username\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name='Set Password'\r\n                className='form-field'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input the Set Password!',\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  placeholder=\"Set Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name='Confirm password'\r\n                className='form-field'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input the Confirm password!',\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  placeholder=\"Confirm password\"\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n          <h3>Terms and Conditions</h3>\r\n          <p>Terms and Conditions These terms and conditions outline the rules and regulations for the use of The CBSE's W ebsite, located at http://qmc.com. Cookies: The website uses cookies to help personalize your online experience. By accessing Question Making Competition Website, you agreed to use the required cookies. A cookie is a text file that is placed on your hard disk by a web page server. Cookies cannot be used to run programs or deliver viruses to your computer. Cookies are uniquely assigned to you and can only be read by a web server in the domain that issued the cookie to you.A cookie is a text file that is placed on your hard disk by a web page server. Cookies cannot be used to run programs or deliver viruses to your computer. Cookies are uniquely assigned to you and can only be read by a web server in the domain that issued the cookie to you.</p>\r\n          <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n          <div className='button-sec'>\r\n            <Button type=\"primary\" onClick={() => navigate('/home')}\r\n              htmlType='submit'\r\n              className='login-form-btn'\r\n            >\r\n              Finish Registration\r\n            </Button>\r\n          </div></>)}\r\n\r\n      </div>\r\n\r\n    </ListWapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Registration;","import PropTypes from 'prop-types';\nimport AppAnimateGroup from '../../@crema/core/AppAnimateGroup';\nimport AppRowContainer from '../../@crema/core/AppRowContainer';\nimport { Card, Col } from 'antd';\n\nconst ListWapper = ({ children }) => {\n    return (\n        <div className='user-pages'>\n            <AppAnimateGroup type='bottom'>\n                <div className='user-container' key='a'>\n                    <Card className='user-card user-card-lg'>\n                        <AppRowContainer>\n                            <Col xs={24} md={24}>\n                                {children}\n                            </Col>\n                        </AppRowContainer>\n                    </Card>\n                </div>\n            </AppAnimateGroup>\n        </div>\n    );\n};\n\nListWapper.propTypes = {\n    children: PropTypes.any,\n};\nexport default ListWapper;"],"sourceRoot":""}