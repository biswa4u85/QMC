{"version":3,"sources":["pages/dashboard/Analytics/WelcomeCard/index.js","pages/dashboard/Analytics/StateCard/StatGraphs.js","pages/dashboard/Analytics/StateCard/index.js","pages/dashboard/Analytics/SalesState/MixBarChart.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","pages/dashboard/Analytics/SalesState/index.js","pages/dashboard/Analytics/VisitorPageView/StatGraphs.js","pages/dashboard/Analytics/VisitorPageView/index.js","pages/dashboard/Analytics/ActiveVisitors/VisitorsGraph.js","pages/dashboard/Analytics/ActiveVisitors/index.js","@crema/core/AppCircularProgress/index.js","pages/dashboard/Analytics/TopSelling/ProductCell.js","pages/dashboard/Analytics/TopSelling/index.js","pages/dashboard/Widgets/CountryMap/MapChart.js","pages/dashboard/Analytics/EarningByCountry/index.js","pages/dashboard/Analytics/TicketsSupport/index.js","pages/dashboard/Analytics/InfoWidget/index.js","pages/dashboard/Analytics/PageVisits/VisitsTable/index.js","pages/dashboard/Analytics/PageVisits/index.js","pages/dashboard/Analytics/OrderNTransaction/TransactionTable/index.js","pages/dashboard/Analytics/OrderNTransaction/index.js","pages/dashboard/Analytics/TrafficSource/index.js","pages/dashboard/Analytics/index.js","@crema/core/AppCard/index.js","@crema/core/AppSelect/index.js","@crema/core/AppMenu/index.js","@crema/core/AppTableContainer/index.js"],"names":["getWelcomeIcon","iconType","color","className","WelcomeCard","data","messages","useIntl","AppCard","AppScrollbar","scrollToTop","map","item","index","icon","counts","type","alt","src","defaultProps","StatGraphs","strokeColor","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Tooltip","labelStyle","Area","dataKey","stroke","strokeWidth","fillOpacity","fill","StateCard","console","log","growth","value","style","graphData","MixBarChart","BarChart","barSize","XAxis","dy","Bar","stackId","getEmptyContainer","ListEmptyComponent","React","isValidElement","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","interval","duration","delay","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","border","ListFooter","loading","footerText","percent","AppList","footerProps","props","SalesState","salesState","saleChartData","title","heightFull","extra","AppSelect","menus","defaultValue","onChange","AppRowContainer","xs","sm","amount","LineChart","tickLine","axisLine","padding","CartesianGrid","horizontal","vertical","Line","dot","activeDot","r","VisitorPageView","VisitorsGraph","ActiveVisitors","green","red","slug","underline","to","AppCircularProgress","rest","ProductCell","Item","name","description","price","trailColor","format","rate","RightOutlined","TopSelling","products","actions","dataSource","allStates","val","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","projection","geography","geographies","geo","rsmKey","centroid","geoCentroid","cur","find","s","Object","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","x","alignmentBaseline","EarningByCountry","earningData","backgroundColor","country","Panel","Collapse","callback","key","genExtra","opened","TicketsSupport","tickets","ClockCircleOutlined","bordered","defaultActiveKey","accordion","header","overAllPercentage","open","status","close","hold","InfoWidget","count","details","columns","dataIndex","render","pageView","CaretUpOutlined","visitors","CaretDownOutlined","VisitsTable","visitsData","AppTableContainer","hoverColor","scroll","PageVisits","pageVisits","href","TransactionTable","transactionData","getPaymentTypeColor","paymentType","getPaymentStatusColor","AppMenu","OrderNTransaction","TrafficSource","trafficData","showInfo","session","Analytics","useDispatch","useState","analyticsData","setAnalyticsData","useEffect","fetchData","axios","get","result","AppPageMetadata","ease","lg","welcomeCard","revenueCards","xxl","visitorsPageView","activeVisitors","topSellingProduct","infoWidgets","children","cover","clsx","selectionKey","selectionType","setSelectionType","Option","Select","menu","options","option","overlay","trigger","onClick","e","preventDefault","pagination","component","Table","rowKey"],"mappings":"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,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK,MAChB,CAACzG,GAAI,KAAMyG,IAAK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","file":"static/js/8.788c7919.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nimport {HiOutlineMailOpen} from 'react-icons/hi';\r\nimport {BiMessageDetail} from 'react-icons/bi';\r\nimport {CgFileDocument} from 'react-icons/cg';\r\nimport AppScrollbar from '../../../../@crema/core/AppScrollbar';\r\n\r\nconst getWelcomeIcon = (iconType) => {\r\n  switch (iconType) {\r\n    case 'HiOutlineMailOpen':\r\n      return <HiOutlineMailOpen color='#0A8FDC' className='icon' />;\r\n    case 'BiMessageDetail':\r\n      return <BiMessageDetail color='#0A8FDC' className='icon' />;\r\n    default:\r\n      return <CgFileDocument color='#0A8FDC' className='icon' />;\r\n  }\r\n};\r\n\r\nconst WelcomeCard = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard className='welcome-card'>\r\n      <div className='welcome-card-info'>\r\n        <div className='welcome-card-content'>\r\n          <div className='welcome-card-header'>\r\n            <h5>{messages['dashboard.analytics.welcome']}</h5>\r\n            <h3>{messages['dashboard.analytics.eddieMassy']}</h3>\r\n          </div>\r\n          <AppScrollbar scrollToTop className='welcome-card-scroll'>\r\n            <div className='welcome-card-container'>\r\n              <div className='welcome-card-row'>\r\n                {data.map((item, index) => (\r\n                  <div className='welcome-card-col' key={'box-' + index}>\r\n                    <div className='welcome-card-col-thumb'>\r\n                      <span className='ant-avatar ant-avatar-circle ant-avatar-image'>\r\n                        {getWelcomeIcon(item.icon)}\r\n                      </span>\r\n                    </div>\r\n                    <div className='welcome-card-col-content'>\r\n                      <h5 className='special-title'>{item.counts}</h5>\r\n                      <p>{item.type}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </AppScrollbar>\r\n        </div>\r\n        <div className='welcome-img'>\r\n          <img alt='welcome' src={'/assets/images/dashboard/welcomImage.svg'} />\r\n        </div>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default WelcomeCard;\r\n\r\nWelcomeCard.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nWelcomeCard.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatGraphs = ({data, strokeColor}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={80}>\r\n      <AreaChart data={data} margin={{top: 25, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor={strokeColor} stopOpacity={0.15} />\r\n            <stop offset='95%' stopColor={strokeColor} stopOpacity={0.01} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          stroke={strokeColor}\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorPv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n  strokeColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport StatGraphs from './StatGraphs';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from 'antd';\r\n/*import {green, red} from '@ant-design/colors';*/\r\nimport './index.style.less';\r\n\r\n/*import {LineChart, Line} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 5000,\r\n    pv: 4000,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 4000,\r\n    pv: 3600,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 3000,\r\n    pv: 7000,\r\n    amt: 2000,\r\n  },\r\n\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 6000,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 7000,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nconst TinyLineChart = () => {\r\n  return (\r\n    <>\r\n      <LineChart width={250} height={100} data={data}>\r\n        <Line type='monotone' dataKey='pv' stroke='#8884d8' strokeWidth={2} />\r\n      </LineChart>\r\n    </>\r\n  );\r\n};*/\r\n\r\nconst StateCard = ({data}) => {\r\n  console.log('log', data.growth);\r\n  return (\r\n    <AppCard className='ana-state-card'>\r\n      <div className='ana-state-content'>\r\n        <div className='ana-state-row'>\r\n          <Button className='btn-icon'>\r\n            <img alt='icon' src={data.icon} />\r\n          </Button>\r\n          <div className='ana-state-item'>\r\n            <div className='ana-state-header text-truncate'>\r\n              <h3>{data.value}</h3>\r\n              <span style={{color: '#49BD65'}}>+{data.growth}%</span>\r\n            </div>\r\n            <p>{data.type}</p>\r\n          </div>\r\n        </div>\r\n        <div className='ana-state-graphs'>\r\n          <StatGraphs data={data.graphData} strokeColor={data.strokeColor} />\r\n        </div>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StateCard;\r\n\r\nStateCard.defaultProps = {};\r\n\r\nStateCard.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {BarChart, Bar, XAxis, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst MixBarChart = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={270}>\r\n      <BarChart\r\n        barSize={7}\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}>\r\n        <XAxis dataKey='name' dy={10} />\r\n        <Tooltip />\r\n        <Bar dataKey='AS' stackId='a' fill='#49BD65' />\r\n        <Bar dataKey='Rev' stackId='a' fill='#0A8FDC' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MixBarChart;\r\n\r\nMixBarChart.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nMixBarChart.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Progress} from 'antd';\r\nimport './index.style.less';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div className='loader-progress'>\r\n      <Progress percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className='list-footer'>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport AppRowContainer from '../../../../@crema/core/AppRowContainer';\r\nimport {Avatar, Col} from 'antd';\r\nimport './index.style.less';\r\nimport MixBarChart from './MixBarChart';\r\nimport AppList from '../../../../@crema/core/AppList';\r\n\r\nconst SalesState = ({salesState, saleChartData}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      className='sales-state-card'\r\n      title={messages['dashboard.analytics.salesState']}\r\n      heightFull\r\n      extra={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }>\r\n      <p className='sales-state-sub-title'>\r\n        1343 {messages['dashboard.analytics.salesThisWeek']}\r\n      </p>\r\n\r\n      <div className='sales-state-main'>\r\n        <AppRowContainer>\r\n          <Col xs={24} sm={14} className='mb-0'>\r\n            <div className='react-pie-chart'>\r\n              <MixBarChart data={saleChartData} />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col xs={24} sm={10} className='mb-0'>\r\n            <div className='sales-state-content'>\r\n              <AppList\r\n                data={salesState}\r\n                renderItem={(item) => (\r\n                  <div\r\n                    className='sales-state-item'\r\n                    key={'salesState-' + item.id}>\r\n                    <Avatar src={item.icon} alt='icon' />\r\n\r\n                    <div className='sales-state-item-content'>\r\n                      <h3>${item.amount}</h3>\r\n                      <p className='mb-0'>{item.type}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </AppRowContainer>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\nexport default SalesState;\r\n\r\nSalesState.defaultProps = {\r\n  salesState: [],\r\n  saleChartData: [],\r\n};\r\n\r\nSalesState.propTypes = {\r\n  salesState: PropTypes.array,\r\n  saleChartData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatGraphs = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={350}>\r\n      <LineChart data={data} margin={{top: 50, right: 0, left: -25, bottom: 0}}>\r\n        <XAxis\r\n          dataKey='name'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid stroke='#eee' horizontal={true} vertical={false} />\r\n        <Line\r\n          type='monotone'\r\n          dataKey='Page'\r\n          stroke='#0698ec'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          activeDot={{r: 4}}\r\n        />\r\n        <Line\r\n          type='monotone'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          dataKey='Visitor'\r\n          stroke='#f44d50'\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatGraphs from './StatGraphs';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst VisitorPageView = ({data}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      heightFull\r\n      title={messages['dashboard.analytics.visitorsPageViews']}\r\n      extra={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }>\r\n      <StatGraphs data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\nexport default VisitorPageView;\r\n\r\nVisitorPageView.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nVisitorPageView.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst VisitorsGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={240}>\r\n      <BarChart barSize={3} data={data}>\r\n        <Bar dataKey='value' fill='#3335' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default VisitorsGraph;\r\n\r\nVisitorsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nVisitorsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VisitorsGraph from './VisitorsGraph';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {green, red} from '@ant-design/colors';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.style.less';\r\n\r\nconst ActiveVisitors = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard className='no-card-space'>\r\n      <div className='active-visitor-graph-wrap'>\r\n        <div className='active-visitor-graph-header'>\r\n          <h3>{messages['dashboard.analytics.activeVisitors']}</h3>\r\n          <p>{messages['dashboard.analytics.pageViewPerMinutes']}</p>\r\n        </div>\r\n        <div className='active-visitor-graph'>\r\n          <VisitorsGraph data={data.graphData} />\r\n        </div>\r\n      </div>\r\n      <div className='active-visitor-content'>\r\n        <div>\r\n          <div className='active-visitor-content-header'>\r\n            <h3>{data.value}</h3>\r\n            <span style={{color: data.growth > 0.0 ? green[6] : red[5]}}>\r\n              {data.growth}% Then yesterday\r\n            </span>\r\n          </div>\r\n          <p>{data.slug}</p>\r\n        </div>\r\n        <div className='active-visitor-footer'>\r\n          <Link className='active-visitor-link' underline='none' to='#'>\r\n            View Report\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ActiveVisitors;\r\n\r\nActiveVisitors.defaultProps = {};\r\n\r\nActiveVisitors.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport ProtoTypes from 'prop-types';\r\n\r\nimport {Progress} from 'antd';\r\n\r\nconst AppCircularProgress = ({percent, ...rest}) => {\r\n  return <Progress type='circle' percent={percent} {...rest} />;\r\n};\r\nexport default AppCircularProgress;\r\n\r\nAppCircularProgress.propTypes = {\r\n  percent: ProtoTypes.number,\r\n};\r\n\r\nAppCircularProgress.defaultProps = {};\r\n","import React from 'react';\r\nimport AppCircularProgress from '../../../../@crema/core/AppCircularProgress';\r\nimport {RightOutlined} from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport {List} from 'antd';\r\nimport './index.style.less';\r\n\r\nconst ProductCell = ({data}) => {\r\n  return (\r\n    <List.Item key={data.id} className='top-selling-cell item-hover'>\r\n      <div className='top-selling-cell-info'>\r\n        <img className='top-selling-cell-img' alt='' src={data.icon} />\r\n\r\n        <div className='top-selling-cell-content'>\r\n          <h3>{data.name}</h3>\r\n          <p>{data.description}</p>\r\n          <span className='top-selling-price'>${data.price}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='top-selling-cell-action'>\r\n        <AppCircularProgress\r\n          strokeColor={data.color}\r\n          trailColor='rgb(214, 214, 214)'\r\n          percent={70}\r\n          strokeWidth={10}\r\n          format={() => <span />}\r\n          width={50}\r\n        />\r\n        <div className='top-selling-cell-action-info'>\r\n          <div>\r\n            <p>Sales</p>\r\n            <span>{data.rate}%</span>\r\n          </div>\r\n          <span className='top-selling-cell-action-icon'>\r\n            <RightOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default ProductCell;\r\n\r\nProductCell.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport ProductCell from './ProductCell';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {List} from 'antd';\r\nimport './index.style.less';\r\n\r\nconst TopSelling = ({products}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      className='no-card-space-ltr-rtl top-selling-card'\r\n      heightFull\r\n      title={messages['dashboard.analytics.topSellingProducts']}\r\n      actions={[<span key={1}>{'+12 ' + messages['common.more']}</span>]}>\r\n      <List\r\n        dataSource={products}\r\n        renderItem={(data, index) => <ProductCell key={index} data={data} />}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TopSelling;\r\n\r\nTopSelling.propTypes = {\r\n  products: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {geoCentroid} from 'd3-geo';\r\nimport {\r\n  Annotation,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n} from 'react-simple-maps';\r\n\r\nconst allStates = [\r\n  {id: 'AL', val: '01'},\r\n  {id: 'AK', val: '02'},\r\n  {id: 'AS', val: '60'},\r\n  {id: 'AZ', val: '04'},\r\n  {id: 'AR', val: '05'},\r\n  {id: 'CA', val: '06'},\r\n  {id: 'CO', val: '08'},\r\n  {id: 'CT', val: '09'},\r\n  {id: 'DE', val: '10'},\r\n  {id: 'DC', val: '11'},\r\n  {id: 'FL', val: '12'},\r\n  {id: 'FM', val: '64'},\r\n  {id: 'GA', val: '13'},\r\n  {id: 'GU', val: '66'},\r\n  {id: 'HI', val: '15'},\r\n  {id: 'ID', val: '16'},\r\n  {id: 'IL', val: '17'},\r\n  {id: 'IN', val: '18'},\r\n  {id: 'IA', val: '19'},\r\n  {id: 'KS', val: '20'},\r\n  {id: 'KY', val: '21'},\r\n  {id: 'LA', val: '22'},\r\n  {id: 'ME', val: '23'},\r\n  {id: 'MH', val: '68'},\r\n  {id: 'MD', val: '24'},\r\n  {id: 'MA', val: '25'},\r\n  {id: 'MI', val: '26'},\r\n  {id: 'MN', val: '27'},\r\n  {id: 'MS', val: '28'},\r\n  {id: 'MO', val: '29'},\r\n  {id: 'MT', val: '30'},\r\n  {id: 'NE', val: '31'},\r\n  {id: 'NV', val: '32'},\r\n  {id: 'NH', val: '33'},\r\n  {id: 'NJ', val: '34'},\r\n  {id: 'NM', val: '35'},\r\n  {id: 'NY', val: '36'},\r\n  {id: 'NC', val: '37'},\r\n  {id: 'ND', val: '38'},\r\n  {id: 'MP', val: '69'},\r\n  {id: 'OH', val: '39'},\r\n  {id: 'OK', val: '40'},\r\n  {id: 'OR', val: '41'},\r\n  {id: 'PW', val: '70'},\r\n  {id: 'PA', val: '42'},\r\n  {id: 'PR', val: '72'},\r\n  {id: 'RI', val: '44'},\r\n  {id: 'SC', val: '45'},\r\n  {id: 'SD', val: '46'},\r\n  {id: 'TN', val: '47'},\r\n  {id: 'TX', val: '48'},\r\n  {id: 'UM', val: '74'},\r\n  {id: 'UT', val: '49'},\r\n  {id: 'VT', val: '50'},\r\n  {id: 'VA', val: '51'},\r\n  {id: 'VI', val: '78'},\r\n  {id: 'WA', val: '53'},\r\n  {id: 'WV', val: '54'},\r\n  {id: 'WI', val: '55'},\r\n  {id: 'WY', val: '56'},\r\n];\r\n\r\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21],\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap className='map-chart' projection='geoAlbersUsa'>\r\n      <Geographies geography={geoUrl}>\r\n        {({geographies}) => (\r\n          <>\r\n            {geographies.map((geo) => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke='#FFF'\r\n                geography={geo}\r\n                fill='#DDD'\r\n              />\r\n            ))}\r\n            {geographies.map((geo) => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find((s) => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + '-name'}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y='2' fontSize={14} textAnchor='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}>\r\n                        <text x={4} fontSize={14} alignmentBaseline='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport MapChart from '../../Widgets/CountryMap/MapChart';\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\nimport { useIntl } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst EarningByCountry = ({ earningData }) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n\r\n  const { messages } = useIntl();\r\n  return (\r\n    <AppCard\r\n      heightFull\r\n      title={messages['dashboard.analytics.earningByCountries']}\r\n      extra={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }>\r\n      <div className='country-map-chart'>\r\n        <MapChart />\r\n      </div>\r\n\r\n      <div className='earning-country-footer'>\r\n        {earningData.map((data) => (\r\n          <div className='earning-country-footer-item' key={data.id}>\r\n            <h3>${data.amount}</h3>\r\n            <div className='ant-row ant-row-middle'>\r\n              <span className='dot' style={{ backgroundColor: data.color }} />\r\n              <p>{data.country}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default EarningByCountry;\r\n\r\nEarningByCountry.propTypes = {\r\n  earningData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\n\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nimport {Collapse, Progress} from 'antd';\r\nimport {ClockCircleOutlined} from '@ant-design/icons';\r\n\r\nconst {Panel} = Collapse;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\nconst genExtra = ({data}) => (\r\n  <>\r\n    <span> {data.opened} Open</span>\r\n  </>\r\n);\r\n\r\nconst TicketsSupport = ({tickets}) => {\r\n  return (\r\n    <AppCard\r\n      className='no-card-space ana-ticket-support-card'\r\n      actions={[\r\n        <div key={1} className='ana-ticket-support-action'>\r\n          <ClockCircleOutlined style={{fontSize: 16}} />\r\n          <span>Last update 30 min ago</span>\r\n        </div>,\r\n      ]}>\r\n      <Collapse\r\n        bordered={false}\r\n        defaultActiveKey={['1']}\r\n        accordion\r\n        onChange={callback}>\r\n        {tickets.map((data) => (\r\n          <Panel header={data.name} key={data.id} extra={genExtra({data})}>\r\n            <div className='ticket-support-collapse'>\r\n              <div className='ticket-support-collapse-item'>\r\n                <span className='ticket-support-open'>Open</span>\r\n                <div className='ant-row ant-row-middle'>\r\n                  <Progress\r\n                    percent={data.overAllPercentage.open}\r\n                    status='active'\r\n                    strokeColor='#5ABE20'\r\n                    trailColor='rgb(214, 214, 214)'\r\n                    strokeWidth={5}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='ticket-support-collapse-item'>\r\n                <span className='ticket-support-open'>Closed</span>\r\n                <div className='ant-row ant-row-middle'>\r\n                  <Progress\r\n                    percent={data.overAllPercentage.close}\r\n                    status='active'\r\n                    strokeColor='#F44D54'\r\n                    trailColor='rgb(214, 214, 214)'\r\n                    strokeWidth={5}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='ticket-support-collapse-item'>\r\n                <span className='ticket-support-open'>On Hold</span>\r\n                <div className='ant-row ant-row-middle'>\r\n                  <Progress\r\n                    percent={data.overAllPercentage.hold}\r\n                    status='active'\r\n                    strokeColor='#F59821'\r\n                    trailColor='rgb(214, 214, 214)'\r\n                    strokeWidth={5}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Panel>\r\n        ))}\r\n      </Collapse>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TicketsSupport;\r\n\r\nTicketsSupport.propTypes = {\r\n  tickets: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst InfoWidget = ({data}) => {\r\n  return (\r\n    <AppCard className='ana-info-widget-card' heightFull>\r\n      <div className='ana-info-widget-info'>\r\n        <div className='ana-info-widget-img'>\r\n          <img src={data.icon} alt='icon' />\r\n        </div>\r\n        <div className='ana-info-widget-content'>\r\n          <h3>{data.count}</h3>\r\n          <p className='text-truncate'>{data.details}</p>\r\n        </div>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default InfoWidget;\r\n\r\nInfoWidget.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\nimport '../index.style.less';\r\nimport {CaretUpOutlined, CaretDownOutlined} from '@ant-design/icons';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Page name',\r\n    dataIndex: 'page',\r\n    key: 'page',\r\n  },\r\n  {\r\n    title: 'Page Views',\r\n    dataIndex: 'pageView',\r\n    key: 'pageView',\r\n    render: (pageView) => (\r\n      <span className='up-icon'>\r\n        <CaretUpOutlined />\r\n        {pageView}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Unique Visitors',\r\n    dataIndex: 'visitors',\r\n    key: 'visitors',\r\n    render: (visitors) => (\r\n      <span className='down-icon'>\r\n        <CaretDownOutlined />\r\n        {visitors}\r\n      </span>\r\n    ),\r\n  },\r\n];\r\n\r\nconst VisitsTable = ({visitsData}) => {\r\n  return (\r\n    <AppTableContainer\r\n      className='page-visit-table'\r\n      hoverColor\r\n      data={visitsData}\r\n      columns={columns}\r\n      scroll={{y: 435}}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VisitsTable;\r\n\r\nVisitsTable.defaultProps = {\r\n  visitsData: [],\r\n};\r\n\r\nVisitsTable.propTypes = {\r\n  visitsData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport VisitsTable from './VisitsTable';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst PageVisits = ({pageVisits}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      className='no-card-space-ltr-rtl'\r\n      title={messages['dashboard.analytics.pageVisits']}\r\n      extra={<a href='#/'>{messages['common.viewAll']}</a>}>\r\n      <VisitsTable visitsData={pageVisits} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default PageVisits;\r\n\r\nPageVisits.propTypes = {\r\n  pageVisits: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\nimport '../index.style.less';\r\nimport AppMenu from '../../../../../@crema/core/AppMenu';\r\n\r\nconst TransactionTable = ({transactionData}) => {\r\n  const getPaymentTypeColor = (paymentType) => {\r\n    switch (paymentType) {\r\n      case 'COD': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Prepaid': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n  const getPaymentStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'In Transit': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Delivered': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'OrderID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (id) => <span className='order-id'>{id}</span>,\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'customer',\r\n      key: 'customer',\r\n    },\r\n    {\r\n      title: 'Order Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Payment',\r\n      dataIndex: 'paymentType',\r\n      key: 'paymentType',\r\n      render: (paymentType) => (\r\n        <span\r\n          style={{\r\n            color: getPaymentTypeColor(paymentType),\r\n          }}>\r\n          {paymentType}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => (\r\n        <span\r\n          style={{\r\n            color: getPaymentStatusColor(status),\r\n            backgroundColor: getPaymentStatusColor(status) + '44',\r\n          }}\r\n          className='badge'>\r\n          {status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'more',\r\n      key: 'more',\r\n      className: 'order-transaction-table-more',\r\n      render: () => <AppMenu />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AppTableContainer\r\n      className='order-transaction-table'\r\n      hoverColor\r\n      data={transactionData}\r\n      columns={columns}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TransactionTable;\r\n\r\nTransactionTable.defaultProps = {\r\n  transactionData: [],\r\n};\r\n\r\nTransactionTable.propTypes = {\r\n  transactionData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport TransactionTable from './TransactionTable';\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst OrderNTransaction = ({transactionData}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      className='no-card-space-ltr-rtl'\r\n      heightFull\r\n      title={messages['dashboard.analytics.ordersTransaction']}\r\n      extra={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }>\r\n      <TransactionTable transactionData={transactionData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default OrderNTransaction;\r\n\r\nOrderNTransaction.propTypes = {\r\n  transactionData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nimport {Progress, Collapse} from 'antd';\r\n\r\nconst {Panel} = Collapse;\r\n\r\nconst TrafficSource = ({trafficData}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['dashboard.analytics.trafficSource']}>\r\n      <Collapse\r\n        bordered={false}\r\n        defaultActiveKey={['1']}\r\n        accordion\r\n        className='traffic-collapse'>\r\n        {trafficData.map((data) => (\r\n          <Panel\r\n            header={\r\n              <div className='traffic-collapse-header-panel'>\r\n                <div className='traffic-collapse-header'>\r\n                  <h3>{data.title}</h3>\r\n                  <span>{data.value}%</span>\r\n                </div>\r\n                <Progress\r\n                  percent={data.value}\r\n                  strokeWidth={10}\r\n                  strokeColor='#0698EC'\r\n                  trailColor='#d6d6d6'\r\n                  showInfo={false}\r\n                />\r\n              </div>\r\n            }\r\n            key={data.id}\r\n            className='traffic-collapse-panel'>\r\n            <div className='traffic-collapse-content'>\r\n              <span className='traffic-collapse-data'>{data.session}</span>\r\n              <span>Session</span>\r\n            </div>\r\n          </Panel>\r\n        ))}\r\n      </Collapse>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TrafficSource;\r\n\r\nTrafficSource.propTypes = {\r\n  trafficData: PropTypes.array,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport AppRowContainer from '../../../@crema/core/AppRowContainer';\r\nimport { Col } from 'antd';\r\nimport WelcomeCard from './WelcomeCard';\r\nimport StateCard from './StateCard';\r\nimport SalesState from './SalesState';\r\nimport VisitorPageView from './VisitorPageView';\r\nimport ActiveVisitors from './ActiveVisitors';\r\nimport TopSelling from './TopSelling';\r\nimport EarningByCountry from './EarningByCountry';\r\nimport TicketsSupport from './TicketsSupport';\r\nimport InfoWidget from './InfoWidget';\r\nimport PageVisits from './PageVisits';\r\nimport OrderNTransaction from './OrderNTransaction';\r\nimport TrafficSource from './TrafficSource';\r\nimport { AppInfoView } from '../../../@crema';\r\nimport { useDispatch } from 'react-redux';\r\nimport AppPageMetadata from '../../../@crema/core/AppPageMetadata';\r\n\r\nconst Analytics = () => {\r\n  const dispatch = useDispatch();\r\n  const [analyticsData, setAnalyticsData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(\"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\")\r\n      setAnalyticsData(result.data)\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  console.log(analyticsData)\r\n\r\n  return (\r\n    <>\r\n      <AppPageMetadata title='Analytics Dashboard' />\r\n      {analyticsData ? (\r\n        <AppRowContainer interval={120} ease={'easeInSine'}>\r\n          <Col xs={24} lg={12} className='mb-0' key={'a'}>\r\n            <AppRowContainer interval={120}>\r\n              <Col xs={24}>\r\n                <WelcomeCard data={analyticsData.welcomeCard} />\r\n              </Col>\r\n              <Col xs={24} sm={12} key={'c'}>\r\n                <StateCard data={analyticsData.revenueCards[0]} />\r\n              </Col>\r\n              <Col xs={24} sm={12} key={'d'}>\r\n                <StateCard data={analyticsData.revenueCards[1]} />\r\n              </Col>\r\n            </AppRowContainer>\r\n          </Col>\r\n          <Col xs={24} lg={12} key={'e'}>\r\n            <SalesState\r\n              salesState={analyticsData.salesState}\r\n              saleChartData={analyticsData.saleChartData}\r\n            />\r\n          </Col>\r\n          <Col xs={24} lg={16} xxl={18} key={'f'}>\r\n            <VisitorPageView data={analyticsData.visitorsPageView} />\r\n          </Col>\r\n          <Col xs={24} lg={8} xxl={6} key={'g'}>\r\n            <ActiveVisitors data={analyticsData.activeVisitors} />\r\n          </Col>\r\n          <Col xs={24} lg={12} key={'h'}>\r\n            <TopSelling products={analyticsData.topSellingProduct} />\r\n          </Col>\r\n          <Col xs={24} lg={12} key={'i'}>\r\n            <EarningByCountry earningData={analyticsData.earningData} />\r\n          </Col>\r\n          <Col xs={24} lg={12} className='mb-0' key={'j'}>\r\n            <AppRowContainer>\r\n              <Col xs={24}>\r\n                <TicketsSupport tickets={analyticsData.tickets} />\r\n              </Col>\r\n              {analyticsData.infoWidgets.map((data, index) => (\r\n                <Col xs={24} sm={8} key={'l' + index}>\r\n                  <InfoWidget data={data} />\r\n                </Col>\r\n              ))}\r\n            </AppRowContainer>\r\n          </Col>\r\n          <Col xs={24} lg={12} key={'m'}>\r\n            <PageVisits pageVisits={analyticsData.pageVisits} />\r\n          </Col>\r\n          <Col xs={24} lg={18} key={'n'}>\r\n            <OrderNTransaction\r\n              transactionData={analyticsData.transactionData}\r\n            />\r\n          </Col>\r\n          <Col xs={24} lg={6} key={'o'}>\r\n            <TrafficSource trafficData={analyticsData.trafficData} />\r\n          </Col>\r\n        </AppRowContainer>\r\n      ) : null}\r\n\r\n      {/* <AppInfoView /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Card} from 'antd';\r\nimport clsx from 'clsx';\r\nimport './index.style.less';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  extra,\r\n  children,\r\n  cover,\r\n  className,\r\n  actions,\r\n  heightFull,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx('card', {heightFull: heightFull}, className)}\r\n      title={title}\r\n      extra={extra ? extra : null}\r\n      cover={cover}\r\n      actions={actions}\r\n      bordered={false}\r\n      {...rest}>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  cover: PropTypes.any,\r\n  className: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import React, {useState} from 'react';\r\nimport {Select} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst AppSelect = ({menus, onChange, defaultValue, selectionKey}) => {\r\n  const [selectionType, setSelectionType] = useState(defaultValue);\r\n\r\n  const handleSelectionType = (value) => {\r\n    setSelectionType(value);\r\n    onChange(value);\r\n  };\r\n\r\n  const {Option} = Select;\r\n\r\n  return (\r\n    <Select\r\n      defaultValue={defaultValue}\r\n      value={selectionType}\r\n      onChange={handleSelectionType}\r\n      className='select-box'>\r\n      {menus.map((menu, index) => (\r\n        <Option\r\n          key={index}\r\n          value={selectionKey ? menu[selectionKey] : menu}\r\n          className='select-option'>\r\n          {selectionKey ? menu[selectionKey] : menu}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default AppSelect;\r\nAppSelect.propTypes = {\r\n  menus: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  defaultValue: PropTypes.any,\r\n  selectionKey: PropTypes.any,\r\n};\r\nAppSelect.defaultProps = {\r\n  menus: [],\r\n  defaultValue: '',\r\n  selectionKey: '',\r\n};\r\n","import React from 'react';\r\nimport {Dropdown, Menu} from 'antd';\r\nimport {FiMoreVertical} from 'react-icons/fi';\r\n\r\nconst options = ['View More', 'Update Data', 'Clear Data'];\r\nconst AppMenu = () => {\r\n  const menu = (\r\n    <Menu>\r\n      {options.map((option) => (\r\n        <Menu.Item key={option}>\r\n          <a href='#/'>{option}</a>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu} trigger={['click']}>\r\n      <a\r\n        className='ant-dropdown-link cr-dropdown-link'\r\n        onClick={(e) => e.preventDefault()}>\r\n        <FiMoreVertical />\r\n      </a>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport {Table} from 'antd';\r\nimport './index.style.less';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport QueueAnim from 'rc-queue-anim';\r\n\r\nconst AppTableContainer = (props) => {\r\n  const {columns, data, pagination, hoverColor, className, ...rest} = props;\r\n\r\n  return (\r\n    <QueueAnim\r\n      component={Table}\r\n      type='left'\r\n      className={clsx('table-responsive', {hoverColor: hoverColor}, className)}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey='id'\r\n      pagination={pagination}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppTableContainer;\r\n\r\nAppTableContainer.propTypes = {\r\n  columns: PropTypes.any,\r\n  data: PropTypes.array,\r\n  className: PropTypes.string,\r\n  pagination: PropTypes.bool,\r\n  hoverColor: PropTypes.bool,\r\n};\r\n\r\nAppTableContainer.defaultProps = {\r\n  pagination: false,\r\n};\r\n"],"sourceRoot":""}