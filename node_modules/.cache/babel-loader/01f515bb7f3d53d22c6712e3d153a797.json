{"ast":null,"code":"var _jsxFileName = \"/Users/avijit/Sites/Erptech/QMC/src/pages/auth/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport IntlMessages from '../../@crema/utility/IntlMessages';\nimport AppAnimateGroup from '../../@crema/core/AppAnimateGroup';\nimport { Button, Card, Col, Form, Input } from 'antd';\nimport { useIntl } from 'react-intl';\nimport AppRowContainer from '../../@crema/core/AppRowContainer';\nimport './index.style.less';\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/user/reset-password.svg\";\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resetPassword } from '../../store/AuthRedux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const pageActive = useRef(false);\n  const isEditData = useSelector(state => state.auth.isEditData);\n  const isEditDataPassword = useSelector(state => state.auth.isEditDataPassword);\n\n  const onFinish = values => {\n    values['email'] = isEditData;\n    dispatch(resetPassword(values));\n    pageActive.current = true;\n  };\n\n  useEffect(() => {\n    if (isEditDataPassword && pageActive.current) {\n      pageActive.current = false;\n      navigate('/login');\n    }\n  }, [token]);\n  const {\n    messages\n  } = useIntl();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-pages\",\n    children: /*#__PURE__*/_jsxDEV(AppAnimateGroup, {\n      type: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(AppPageMetadata, {\n        title: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"login-card login-card-lg\",\n          children: /*#__PURE__*/_jsxDEV(AppRowContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 12,\n              className: \"login-styled-reset-img-col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-styled-img login-styled-img-auto\",\n                children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-card-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"FORGET USERNAME/PASSWORD?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                className: \"login-form mb-0\",\n                name: \"basic\",\n                initialValues: {\n                  remember: true\n                },\n                onFinish: onFinish,\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"code\",\n                  className: \"form-field\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input the code!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: 'Code'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"newPassword\",\n                  className: \"form-field\",\n                  rules: [{\n                    required: true,\n                    message: 'Please input your Password!'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"password\",\n                    placeholder: 'New Password'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: 10\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"login-field-action-link ml-auto\",\n                    onClick: () => navigate('/signin'),\n                    children: \"Back to login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  className: \"login-form-btn\",\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"common.resetMyPassword\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, 'a', false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"ALSdE5XKgBwM7FLb3TOOAhESVmg=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useIntl];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useRef","useEffect","IntlMessages","AppAnimateGroup","Button","Card","Col","Form","Input","useIntl","AppRowContainer","AppPageMetadata","useNavigate","useSelector","useDispatch","resetPassword","ResetPassword","navigate","dispatch","token","state","auth","pageActive","isEditData","isEditDataPassword","onFinish","values","current","messages","remember","required","message","marginBottom"],"sources":["/Users/avijit/Sites/Erptech/QMC/src/pages/auth/ResetPassword.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport IntlMessages from '../../@crema/utility/IntlMessages';\r\nimport AppAnimateGroup from '../../@crema/core/AppAnimateGroup';\r\nimport { Button, Card, Col, Form, Input } from 'antd';\r\nimport { useIntl } from 'react-intl';\r\nimport AppRowContainer from '../../@crema/core/AppRowContainer';\r\nimport './index.style.less';\r\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\r\nimport { ReactComponent as Logo } from '../../assets/user/reset-password.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetPassword } from '../../store/AuthRedux'\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token)\r\n  const pageActive = useRef(false);\r\n  const isEditData = useSelector((state) => state.auth.isEditData)\r\n  const isEditDataPassword = useSelector((state) => state.auth.isEditDataPassword)\r\n\r\n  const onFinish = (values) => {\r\n    values['email'] = isEditData\r\n    dispatch(resetPassword(values))\r\n    pageActive.current = true\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditDataPassword && pageActive.current) {\r\n      pageActive.current = false\r\n      navigate('/login');\r\n    }\r\n  }, [token]);\r\n  const { messages } = useIntl();\r\n\r\n  return (\r\n    <div className='login-pages'>\r\n      <AppAnimateGroup type='bottom'>\r\n        <AppPageMetadata title='Reset Password' />\r\n        <div className='login-container' key='a'>\r\n          <Card className='login-card login-card-lg'>\r\n            <AppRowContainer>\r\n              <Col xs={24} md={12} className='login-styled-reset-img-col'>\r\n                <div className='login-styled-img login-styled-img-auto'>\r\n                  <Logo />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col xs={24} md={12}>\r\n                <div className='login-card-header'>\r\n                  <h3>\r\n                  FORGET USERNAME/PASSWORD?\r\n                  </h3>\r\n                </div>\r\n\r\n                <Form\r\n                  className='login-form mb-0'\r\n                  name='basic'\r\n                  initialValues={{ remember: true }}\r\n                  onFinish={onFinish}>\r\n\r\n\r\n                  <Form.Item\r\n                    name='code'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input the code!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      placeholder={'Code'}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name='newPassword'\r\n                    className='form-field'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                      },\r\n                    ]}>\r\n                    <Input\r\n                      type='password'\r\n                      placeholder={'New Password'}\r\n                    />\r\n                  </Form.Item>\r\n                  <div style={{marginBottom:10}}>\r\n                      <span className='login-field-action-link ml-auto' onClick={() => navigate('/signin')}>\r\n                        Back to login\r\n                      </span>\r\n                    </div>\r\n                  <Button\r\n                    type='primary'\r\n                    htmlType='submit'\r\n                    className='login-form-btn'>\r\n                    <IntlMessages id='common.resetMyPassword' />\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </AppRowContainer>\r\n          </Card>\r\n        </div>\r\n      </AppAnimateGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}